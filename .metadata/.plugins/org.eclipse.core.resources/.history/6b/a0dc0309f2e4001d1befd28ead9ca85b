package edu.kh.comm.model.dao;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.mybatis.spring.SqlSessionTemplate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import edu.kh.comm.member.model.vo.Member;

@Repository //영속성을 가지는 DB/파일과 연결되는 클래스임을 명시 + bean으로 등록
public class MemberDAO {
	
	// DAO는 DB랑 연결하기 위한 Connection이 공통적으로 필요함
	// -> 필드에 선언
	// -> mybatis 영속성 프레임워크를 이용하려면 Connection을 이용해 만들어진 객체
	// sqlSessionTemplate을 사용
	
	@Autowired //root-context.xml에서 생성된 SqlSessionTemplate bean을 의존성 주입(DI)
	private SqlSessionTemplate sqlSession;
	
	private Logger logger = LoggerFactory.getLogger(MemberDAO.class);

	public Member login(Member inputMember) {
		
		// 1행 조회 방법(파라미터 X)
		//int count = sqlSession.selectOne("namespace값.id값");
		//memberMapper는 member-mapper.xml에 있고 밑에 select문 id값
		
		//int count = sqlSession.selectOne("memberMapper.test1");
		
		//logger.debug(count + "");
		
		
		// 1행 조회 방법(파라미터 O)
		/*String memberNickname = sqlSession.selectOne("memberMapper.test2", inputMember.getMemberEmail()); 
		 * logger.debug(memberNickname + "");
		 */
		
		/*
		 * 1행 조회 방법(파라미터가 VO인 경우) String memberTel =
		 * sqlSession.selectOne("memberMapper.test3", inputMember);
		 * logger.debug(memberTel + "");
		 */
		
		// 1행 조회(파라미터가 VO, 반환되는 결과도 VO 인경우)
		Member loginMember = sqlSession.selectOne("memberMapper.login", inputMember);
		logger.debug(loginMember + "");
		
		
		
		
		
		return loginMember;
	}

	public int emailDupCheck(String memberEmail) {
		
		return sqlSession.selectOne("memberMapper.emailDupCheck", memberEmail);
	}

	public int nicknameDupCheck(String memberNickname) {
		// TODO Auto-generated method stub
		return sqlSession.selectOne("memberMapper.nicknameDupCheck", memberNickname );
	}

	public int memberSignup(Member inputMember) {
		return sqlSession.selectOne("memberMapper.signUp", inputMember);
		
	}

	public Member selectOne(String memberEmail) {
		
		Member member =sqlSession.selectOne("memberMapper.selectOne", memberEmail);
		
		
		return member;
	}

	public List<Member> selectAll() {
		
		List<Member> member = sqlSession.selectList("memberMapper.selectAll");	
		
		return member;
	}

	public String checkPw(Member loginMember) {
		
		
		return sqlSession.selectOne("myPageMapper.checkPw", loginMember);
	}
	
	

	
}
